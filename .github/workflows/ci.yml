name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    env:
      DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: mydb
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install Backend Dependencies
        working-directory: vowvenue_backend
        run: pip install -r requirements.txt

      - name: Wait for Database to be Ready
        run: |
          until pg_isready -h localhost -p 5432 -U postgres; do
            echo "Waiting for database to be ready..."
            sleep 2
          done

      - name: Run Backend Tests
        working-directory: vowvenue_backend
        env:
          DATABASE_URL: postgres://postgres:postgres@postgres:5432/mydb
        run: python manage.py test

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20"

      - name: Install Frontend Dependencies
        working-directory: vow-venue-frontend
        run: npm install

      - name: Run Frontend Tests
        working-directory: vow-venue-frontend
        run: npm test -- --watchAll=false

      - name: Scan for Vulnerabilities (Frontend)
        working-directory: vow-venue-frontend
        run: npm audit --audit-level=high || true

      - name: Scan for Vulnerabilities (Backend)
        working-directory: vowvenue_backend
        run: |
          pip install safety
          safety check || true

      - name: Check secret values are present
        run: |
          echo "Username present: ${{ secrets.DOCKER_USERNAME != '' }}"
          echo "Password length: $(echo -n ${{ secrets.DOCKER_PASSWORD }} | wc -c)"
      - name: Verify secrets
        run: |
          if [ -z "${{ secrets.DOCKER_USERNAME }}" ] || [ -z "${{ secrets.DOCKER_PASSWORD }}" ]; then
             echo "Docker credentials not set!"
              exit 1
             fi


      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Build Docker Images (Frontend)
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/vowvenue-frontend:latest ./vow-venue-frontend

      - name: Build Docker Images (Backend)
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/vowvenue-backend:latest ./vowvenue_backend

      - name: Push Docker Images to Docker Hub
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/vowvenue-frontend:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/vowvenue-backend:latest
