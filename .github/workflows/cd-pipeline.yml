name: CI/CD Pipeline

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main

env:
  DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
  DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
  ACR_LOGIN_SERVER: ${{ secrets.ACR_LOGIN_SERVER }}
  AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
  AZURE_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
  AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
  AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
  VERSION: ${{ github.sha }}
  RESOURCE_GROUP: knotnest-rg

jobs:
  build-test-scan:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Generate CHANGELOG
        run: |
          echo "## $(date +'%Y-%m-%d') - Version ${VERSION:0:7}" >> CHANGELOG.md
          git log --pretty=format:"- %s" --reverse >> CHANGELOG.md
          echo "" >> CHANGELOG.md

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install backend dependencies
        run: |
          cd vowvenue_backend
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run backend tests
        run: |
          cd vowvenue_backend
          python manage.py test

      - name: Dependency vulnerability scan (backend)
        run: |
          pip install safety
          safety check -r vowvenue_backend/requirements.txt --output-file safety-report.json
        continue-on-error: true

      - name: Upload backend security report
        uses: actions/upload-artifact@v4
        with:
          name: backend-security-report
          path: safety-report.json
        if: always()

      - name: Install frontend dependencies
        run: |
          cd vow-venue-frontend
          npm ci

      - name: Run frontend tests
        run: |
          cd vow-venue-frontend
          npm test -- --watchAll=false

      - name: Dependency vulnerability scan (frontend)
        run: |
          cd vow-venue-frontend
          npm audit --audit-level=high --json > npm-audit.json
        continue-on-error: true

      - name: Upload frontend security report
        uses: actions/upload-artifact@v4
        with:
          name: frontend-security-report
          path: vow-venue-frontend/npm-audit.json
        if: always()

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Azure Container Registry
        uses: azure/docker-login@v1
        with:
          login-server: ${{ env.ACR_LOGIN_SERVER }}
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}

      - name: Build backend image
        run: docker build -t ${{ env.ACR_LOGIN_SERVER }}/knot-backend:${{ env.VERSION }} ./vowvenue_backend

      - name: Build frontend image
        run: docker build -t ${{ env.ACR_LOGIN_SERVER }}/knot-frontend:${{ env.VERSION }} ./vow-venue-frontend

      - name: Push backend image
        run: |
          docker push ${{ env.ACR_LOGIN_SERVER }}/knot-backend:${{ env.VERSION }}
          docker tag ${{ env.ACR_LOGIN_SERVER }}/knot-backend:${{ env.VERSION }} ${{ env.ACR_LOGIN_SERVER }}/knot-backend:latest
          docker push ${{ env.ACR_LOGIN_SERVER }}/knot-backend:latest

      - name: Push frontend image
        run: |
          docker push ${{ env.ACR_LOGIN_SERVER }}/knot-frontend:${{ env.VERSION }}
          docker tag ${{ env.ACR_LOGIN_SERVER }}/knot-frontend:${{ env.VERSION }} ${{ env.ACR_LOGIN_SERVER }}/knot-frontend:latest
          docker push ${{ env.ACR_LOGIN_SERVER }}/knot-frontend:latest

  deploy-production:
    needs: build-test-scan
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Azure CLI
        run: |
          curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash
          az --version

      - name: Azure Login
        run: |
          az login --service-principal \
            -u ${{ secrets.AZURE_CLIENT_ID }} \
            -p ${{ secrets.AZURE_CLIENT_SECRET }} \
            --tenant ${{ secrets.AZURE_TENANT_ID }}
          az account set --subscription ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Deploy Backend to Azure Container App
        run: |
          az containerapp update \
            --name knot-backend \
            --resource-group ${{ env.RESOURCE_GROUP }} \
            --image ${{ env.ACR_LOGIN_SERVER }}/knot-backend:${{ env.VERSION }} \
            --cpu 0.5 \
            --memory 1.0Gi

      - name: Deploy Frontend to Azure Container App
        run: |
          az containerapp update \
            --name knot-frontend \
            --resource-group ${{ env.RESOURCE_GROUP }} \
            --image ${{ env.ACR_LOGIN_SERVER }}/knot-frontend:${{ env.VERSION }} \
            --cpu 0.5 \
            --memory 1.0Gi

  post-deployment-verification:
    needs: deploy-production
    if: always()
    runs-on: ubuntu-latest
    steps:
      - name: Upload CHANGELOG
        uses: actions/upload-artifact@v4
        with:
          name: changelog
          path: CHANGELOG.md
